buildscript {
    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0'
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
        classpath files('lib/pegdown-doclet-gradle-plugin-1.2-SNAPSHOT.jar')
        // classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0'
    }
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'com.bmuschko.nexus'
apply plugin: 'idea'
apply plugin: 'ch.raffael.doclets.pegdown'
// apply plugin: 'com.jfrog.bintray'

sourceCompatibility = 1.7
targetCompatibility = 1.7

configurations {
    provided
}

sourceSets {
    main {
        compileClasspath += configurations.provided
        runtimeClasspath += configurations.provided
    }
    test {
        compileClasspath += configurations.provided
        runtimeClasspath += configurations.provided
    }
}

dependencies {
    compile 'com.squareup.retrofit2:retrofit:2.0.2'
    compile 'com.squareup.retrofit2:converter-gson:2.0.2'
    compile 'com.squareup.okhttp3:okhttp:3.2.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'
    provided 'com.google.android:android:4.1.1.4'
    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'nl.jqno.equalsverifier:equalsverifier:1.6'
    testCompile 'com.google.guava:guava:18.0'
    testCompile 'com.squareup.okhttp3:mockwebserver:3.2.0'
}

idea {
    module {
        scopes.PROVIDED.plus += [configurations.provided]
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

modifyPom {
    project {
        name POM_NAME
        packaging POM_PACKAGING
        description POM_DESCRIPTION
        url POM_URL

        scm {
            url POM_SCM_URL
            connection POM_SCM_CONNECTION
            developerConnection POM_SCM_DEV_CONNECTION
        }

        licenses {
            license {
                name POM_LICENCE_NAME
                url POM_LICENCE_URL
                distribution POM_LICENCE_DIST
            }
        }

        developers {
            developer {
                id POM_DEVELOPER_ID
                name POM_DEVELOPER_NAME
            }
        }
    }
}

// bintray {
//     user = BINTRAY_USER //this usually comes from gradle.properties file in ~/.gradle
//     key = BINTRAY_API_KEY //this usually comes from gradle.properties file in ~/.gradle
//
//     publications = ['mavenJava'] //When uploading Maven-based publication files
//     dryRun = true //Whether to run this as dry-run, without deploying
//     publish = true //If version should be auto published after an upload
//     pkg {
//         repo = 'sixpack-java'
//         userOrg = 'seatgeek'
//         name = 'sixpack-java'
//         desc = 'A java client for the sixpack A/B testing framework'
//         websiteUrl = 'https://github.com/seatgeek/sixpack-java'
//         issueTrackerUrl = 'https://github.com/seatgeek/sixpack-java/issues'
//         vcsUrl = 'https://github.com/seatgeek/sixpack-java.git'
//         licenses = ['BSD-2-Clause']
//         //labels = ['seatgeek', 'sixpack', 'java']
//         publicDownloadNumbers = true
//         //Optional version descriptor
//         version {
//             name = project.version //Bintray logical version name
//             desc = 'optional, version-specific description'
//             released  = 'optional, date of the version release' //2 possible values: date in the format of 'yyyy-MM-dd'T'HH:mm:ss.SSSZZ' OR a java.util.Date instance
//             vcsTag = '1.3.0'
//             gpg {
//                 sign = true //Determines whether to GPG sign the files. The default is false
//                 passphrase = 'passphrase' //Optional. The passphrase for GPG signing'
//             }
//             mavenCentralSync {
//                 sync = true //Optional (true by default). Determines whether to sync the version to Maven Central.
//                 user = 'userToken' //OSS user token
//                 password = 'paasword' //OSS user password
//                 close = '1' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
//             }
//         }
//     }
// }
